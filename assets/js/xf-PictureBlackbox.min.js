function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); } function _nonIterableSpread() { throw new TypeError("Cố gắng trải ra một phiên bản không thể duyệt qua.\nĐể có thể duyệt qua, các đối tượng không phải mảng phải có một phương thức [Symbol.iterator]()"); } function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); } function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); } function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); } function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i]; return arr2; } document.addEventListener('DOMContentLoaded', function () { var linkCss = document.createElement('link'); linkCss.setAttribute('rel', 'stylesheet'); linkCss.setAttribute('type', 'text/css'); linkCss.setAttribute('href', 'assets/css/xf-PictureBlackbox.min.css'); document.head.appendChild(linkCss); var domId = document.querySelectorAll('#xf-PicBlackbox'); var domClass = Array.from(document.querySelectorAll('.xf-PicBlackbox')); var PicBlackbox = [].concat(_toConsumableArray(domId), domClass); var eleImg = document.querySelectorAll('img[data-src]'); if (eleImg.length) { var callback = function callback(entries) { entries.forEach(function (entry) { if (entry.isIntersecting) { var imgDom = entry.target; var data_src = imgDom.getAttribute('data-src'); imgDom.setAttribute('src', data_src); imgDom.removeAttribute('data-src'); imgDom.classList.add('xf-showImg'); observer.unobserve(imgDom); } }); }; var observer = new IntersectionObserver(callback); eleImg.forEach(function (images) { observer.observe(images); }); } PicBlackbox.forEach(function (dom) { dom.addEventListener('click', function (event) { event.preventDefault(); var mainBoxNum = document.querySelectorAll('.xf-mainBox').length; if (mainBoxNum) { alert('Mỗi lần chỉ có thể tạo một phần tử dom~'); return false; } var picLink = this.getAttribute('data-pic') || this.src; var zdyText = this.getAttribute('data-text'); if (picLink === null || picLink === '') { alert('Phát hiện bạn chưa thêm thuộc tính data-pic vào thẻ hoặc không có đường dẫn hình ảnh'); return false; } var xfMainBox = createElementWithClass('div', 'xf-mainBox'); var insideDiv = createElementWithClass('div', 'xf-fadeOutDiv'); var masking = createElementWithClass('div', 'xf-masking'); var newImg = createElementWithClass('img', 'xf-fadeOutPic'); var newP = createElementWithClass('p', 'xf-fadeOutText'); var delDom = createElementWithClass('i', 'xf-delDom'); delDom.textContent = '×'; newImg.src = picLink; newP.textContent = zdyText; var children = [newImg, delDom]; if (zdyText !== null) { newImg.alt = zdyText; children.splice(1, 0, newP); } insideDiv.append.apply(insideDiv, children); xfMainBox.append(insideDiv, masking); document.body.appendChild(xfMainBox); var pic = document.querySelector('.xf-fadeOutPic'); var fadeOutDiv = document.querySelector('.xf-fadeOutDiv'); var img = new Image(); img.onload = function () { var w = img.width; var h = img.height; if (w > h) { pic.style.width = "100%"; fadeOutDiv.classList.add('Div-w'); } else if (w < h) { pic.style.height = "100%"; fadeOutDiv.classList.add('Div-h'); } else { pic.style.width = '100%'; pic.style.height = "100%"; fadeOutDiv.classList.add('Div-center'); } }; img.src = picLink; var mainBox = document.querySelector('.xf-mainBox'); mainBox.classList.add('xf-fadeIn'); var xfTextCopy = document.querySelector('.xf-fadeOutText'); if (xfTextCopy) { var alertBox = null; xfTextCopy.addEventListener('click', async function () { var text = xfTextCopy.textContent; function showSimpleAlert(text) { alertBox.textContent = text; } if (alertBox) { showSimpleAlert(text); } else { alertBox = document.createElement('div'); alertBox.classList.add('xf-simpleAlert'); try { await navigator.clipboard.writeText(text); showSimpleAlert('Sao chép thành công'); } catch (err) { alert('Sao chép thất bại'); } document.body.appendChild(alertBox); setTimeout(function () { alertBox.style.left = 0; }, 50); setTimeout(function () { alertBox.style.left = '-100%'; setTimeout(function () { alertBox.remove(); alertBox = null; }, 500); }, 3050); } }); } var xfImgDel = document.querySelector('.xf-masking'); var xfdelDom = document.querySelector('.xf-delDom'); xfImgDel.addEventListener('click', removeElement); xfdelDom.addEventListener('click', removeElement); function removeElement() { var classList = mainBox.classList; classList.remove('xf-fadeIn'); classList.add('xf-fadeOut'); setTimeout(function () { return mainBox.remove(); }, 350); } }); return false; }); function createElementWithClass(tagName, className) { var ele = document.createElement(tagName); if (className) { ele.classList.add(className); } return ele; } });
